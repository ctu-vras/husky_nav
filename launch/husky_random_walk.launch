<?xml version="1.0" encoding="UTF-8" ?>
<launch>
    <arg name="rviz" default="true" doc="Launch RViz for data visualization or not"/>
    <arg name="gui" default="false" doc="Launch Gazebo GUI or not"/>
<!--     <arg name="world" default="$(dirname)/../worlds/farmWith1CropRow.world"/> -->
<!--    <arg name="world" default="$(dirname)/../worlds/simcity.world"/> -->
<!--     <arg name="world" default="$(dirname)/../worlds/simcity_dynamic.world"/> -->
<!--     <arg name="world" default="$(dirname)/../worlds/emptyfarm.world"/> -->
<!--     <arg name="world" default="inspection"/> -->
    <arg name="world" default="$(dirname)/../worlds/terrain_vegetation.world"/>
    <arg name="record" default="false" doc="Record input data or not"/>
    <arg name="bag_path" default="$(dirname)/husky_navigation.bag"/>

    <!-- Husky Simulation -->
    <include file="$(dirname)/husky_sim.launch">
        <arg name="world" value="$(arg world)"/>
        <arg name="gui" value="$(arg gui)"/>
    </include>

    <!-- Husky Random Walk -->
    <include file="$(dirname)/random_walk.launch"/>

    <!-- RViz -->
    <node if="$(arg rviz)" name="rviz" pkg="rviz" type="rviz" args="-d $(dirname)/../config/rviz/explore.rviz"/>

    <!-- LSS input data recording -->
    <include if="$(arg record)" file="$(dirname)/record.launch">
        <arg name="topics" value="'/ids_camera_front/image_raw/compressed'
                                  '/ids_camera_left/image_raw/compressed'
                                  '/ids_camera_right/image_raw/compressed'
                                  '/ids_camera_rear/image_raw/compressed'
                                  '/ids_camera_front/camera_info'
                                  '/ids_camera_left/camera_info'
                                  '/ids_camera_right/camera_info'
                                  '/ids_camera_rear/camera_info'
                                  '/points'
                                  '/tf' '/tf_static'"/>
        <arg name="path" value="$(arg bag_path)"/>
    </include>
</launch>
