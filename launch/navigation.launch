<?xml version="1.0" encoding="UTF-8" ?>
<launch>
    <arg name="device" default="cuda" doc="Device to run tensor operations on: cpu or cuda"/>
    <arg name="rviz" default="true" doc="Launch RViz for data visualization or not"/>
    <arg name="sim_time" default="true"/>
    <arg name="use_osm" default="false"/>
    <arg name="follower" default="true"/>
    <arg name="bumper" default="false"/>
    <arg name="traversability" default="geometric" doc="Traversability estimation type: 'semantic, geometric, or fused'"/>
<!--    <arg name="gpx_assignment" default="$(find gps_to_path)/data/unhost_final_demo_husky_west.gpx"/>-->
    <arg name="gpx_assignment" default="$(find gps_to_path)/data/old/unhost_easy.gpx"/>
    <arg name="max_speed" default="0.5"/>

    <param name="use_sim_time" value="$(arg sim_time)"/>

    <!-- Odometry correction -->
<!--    <node name="odom_correct" pkg="nodelet" type="nodelet"-->
<!--          args="standalone nav_utils/odom_twist_to_child_frame">-->
<!--        <remap from="odom" to="husky_velocity_controller/odom" />-->
<!--        <remap from="odom_out" to="husky_velocity_controller/odom_corrected" />-->
<!--    </node>-->

    <!-- Fused Localization -->
    <include file="$(find cras_gps_odom)/launch/gps_odom.launch">
        <arg name="fix_topic" value="gps/fix"/>
        <arg name="magnetic_declination" value="0.0"/>
<!--        <arg name="odom_topic" value="husky_velocity_controller/odom_corrected"/>-->
        <arg name="odom_topic" value="husky_velocity_controller/odom"/>
    </include>

    <!-- Traversability Estimation -->
    <include file="$(find traversability_estimation)/launch/$(arg traversability)_traversability.launch">
        <arg name="input" value="/points"/>
        <arg unless="$(eval traversability == 'geometric')" name="device" value="$(arg device)"/>
        <arg unless="$(eval traversability == 'semantic')" name="robot" value="husky-robot"/>
        <arg unless="$(eval traversability == 'semantic')" name="azimuth_only" value="false"/> <!-- TODO: should be true, publish 2D point cloud in gazebo simulator from Ouster LiDAR points.shape=(H, W) -->
    </include>

    <!-- Path planner -->
    <include file="$(find gps_to_path)/launch/path_planner_igraph.launch">
        <arg name="gpx_assignment" value="$(arg gpx_assignment)"/>
        <arg name="use_osm" value="$(arg use_osm)"/>
    </include>

    <include file="$(find gps_to_path)/launch/visualization.launch"/>

    <!-- Path follower -->
    <include if="$(arg follower)" file="$(find gps_to_path)/launch/follower.launch">
        <arg if="$(arg bumper)" name="cmd_vel" value="nav/cmd_vel"/>
        <arg unless="$(arg bumper)" name="cmd_vel" value="/cmd_vel"/>
        <arg name="max_speed" value="$(arg max_speed)"/>
        <arg name="robot" value="husky-robot"/>
    </include>

    <!-- Local obstacle avoidance -->
    <node if="$(arg bumper)"
          name="virtual_bumper" pkg="augmented_robot_trackers" type="virtual_bumper_marv_sys.py"
          respawn="true" respawn_delay="1.0" output="screen">
        <rosparam command="load" file="$(find augmented_robot_trackers)/src/utilities/configs/virtual_bumper_husky_sys.yaml"/>
        <remap from="cmd_vel_in" to="nav/cmd_vel"/>
        <remap from="cmd_vel_out" to="/cmd_vel"/>
        <remap from="points_filtered" to="/max_points_125mm"/>
    </node>

    <!-- RVIZ -->
    <node if="$(arg rviz)" name="rviz" pkg="rviz" type="rviz"
          args="-d $(find robingas_mission_gazebo)/config/rviz/navigation.rviz"/>
</launch>
