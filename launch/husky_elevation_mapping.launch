<?xml version="1.0" encoding="utf-8"?>

<launch>
  <arg name="rviz" default="true" doc="Launch RViz for data visualization or not"/>
  <arg name="gui" default="false" doc="Launch Gazebo GUI or not"/>
  <arg name="robot" default="husky" doc="Robot name"/>
  <arg name="world" default="$(dirname)/../worlds/terrain_vegetation.world"/>

  <!-- Gazebo world and spawn Husky robot -->
  <include file="$(dirname)/husky_sim.launch">
    <arg name="world" value="$(arg world)"/>
    <arg name="gui" value="$(arg gui)"/>
  </include>

  <!-- Launch cloud filter nodelet. -->
  <node name="range_filter" pkg="nodelet" type="nodelet" args="standalone cloud_proc/range_filter">
      respawn="true" respawn_delay="1.0" output="log">
    <rosparam subst_value="true">
        field: x
        min: 0.01
        max: 6.4
    </rosparam>
    <remap from="input" to="points"/>
    <remap from="output" to="points_in_range"/>
  </node>
  <!-- Launch voxel grid filter nodelet. -->
  <node pkg="nodelet" type="nodelet" name="pcl_manager" args="manager" output="screen"/>
  <node pkg="nodelet" type="nodelet" name="voxel_grid" args="load pcl/VoxelGrid pcl_manager" output="screen">
    <remap from="~input" to="/points_in_range"/>
    <remap from="~output" to="/points_downsampled"/>
    <rosparam>
      filter_field_name: z
      filter_limit_min: -1.2
      filter_limit_max: 0.2
      filter_limit_negative: False
      leaf_size: 0.1
    </rosparam>
  </node>

  <!-- Publish tf 'base_footprint' as pose.-->
  <node pkg="elevation_mapping_demos" type="tf_to_pose_publisher.py" name="husky_pose_publisher">
    <param name="from_frame" type="string" value="odom"/>
    <param name="to_frame" type="string" value="base_footprint"/>
  </node>

  <!-- Launch elevation mapping node. -->
  <node pkg="elevation_mapping" type="elevation_mapping" name="elevation_mapping" output="screen">
    <rosparam command="load" file="$(dirname)/../config/elevation_mapping/robots/husky.yaml"/>
    <rosparam command="load" file="$(dirname)/../config/elevation_mapping/postprocessing/postprocessor_pipeline.yaml"/>
  </node>

  <include if="0" file="$(find monoforce)/launch/dphysics.launch">
    <arg name="warp_dphys" value="true"/>
    <arg name="robot" value="husky"/>
    <arg name="gridmap_topic" value="elevation_mapping/elevation_map"/>
    <arg name="gridmap_frame" value="base_footprint"/>
  </include>

  <!-- Launch RViz with the demo configuration. -->
  <node name="rviz" pkg="rviz" type="rviz" args="-d $(dirname)/../config/rviz/elevation_mapping.rviz"/>

</launch>