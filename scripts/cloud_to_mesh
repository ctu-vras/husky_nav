#! /usr/bin/env python
import os
import open3d as o3d
from monoforce.datasets.robingas import robingas_seq_paths


def cloud_to_mesh_open3d():
    path = robingas_seq_paths['husky_oru'][0]
    cloud_path = os.path.join(path, 'global_map.pcd')
    mesh_path = os.path.join(path, 'map.obj')
    assert os.path.exists(cloud_path)
    pcd = o3d.io.read_point_cloud(cloud_path)
    # o3d.visualization.draw_geometries([pcd])
    print('Estimating normals...')
    with o3d.utility.VerbosityContextManager(o3d.utility.VerbosityLevel.Debug):
        pcd.estimate_normals()
        pcd.orient_normals_consistent_tangent_plane(100)
    # o3d.visualization.draw_geometries([pcd], point_show_normal=True)

    print('Run Poisson surface reconstruction...')
    with o3d.utility.VerbosityContextManager(o3d.utility.VerbosityLevel.Debug):
        mesh, densities = o3d.geometry.TriangleMesh.create_from_point_cloud_poisson(pcd, depth=9)
    print(mesh)
    mesh.paint_uniform_color([0.7, 0.7, 0.7])
    # save mesh as obj file
    o3d.io.write_triangle_mesh(mesh_path, mesh)

    # load mesh
    assert os.path.exists(mesh_path)
    mesh = o3d.io.read_triangle_mesh(mesh_path)
    o3d.visualization.draw_geometries([mesh])


def main():
    cloud_to_mesh_open3d()


if __name__ == '__main__':
    main()
